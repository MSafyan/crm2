{"version":3,"file":"static/js/871.e18dfb04.chunk.js","mappings":"iNAmCA,IAnCmB,SAAC,GAUb,IATLA,EASI,EATJA,MACAC,EAQI,EARJA,KAQI,IAPJC,KAAAA,OAOI,MAPG,OAOH,EANJC,EAMI,EANJA,YACAC,EAKI,EALJA,QACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,MACGC,GACC,YACJ,OACE,iBAAKC,UAAU,gBAAf,WACE,kBAAOC,QAAST,EAAMQ,UAAU,sCAAhC,SACGT,KAGH,0BACEW,GAAIV,EACJC,KAAMA,EACNO,UAAU,6MACVN,YAAaA,EACbG,MAAOA,EACPF,QAASA,EACTC,OAAQA,GACJG,KAGN,iBAAMC,UAAU,sDAAhB,SACGF,S,wHCrBHK,EAAgB,CACpBC,UAAW,GACXC,KAAM,GACNC,SAAU,GACVC,SAAU,IAGNC,EAAmBC,EAAAA,GAAW,CAClCL,UAAWK,EAAAA,KAAaC,SAAS,8BACjCL,KAAMI,EAAAA,KACHC,SAAS,8BACTC,QAAQ,mBAAoB,gBAC/BL,SAAUG,EAAAA,KAAaC,SAAS,yBAChCH,SAAUE,EAAAA,KAAaC,SAAS,2BAoFlC,UAjFoB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,MACTX,GAAOY,EAAAA,EAAAA,MAAPZ,GAQFa,GAASC,EAAAA,EAAAA,IAAU,CACvBb,cAAAA,EACAK,iBAAAA,EACAS,SATe,SAACC,GAChBC,EAAAA,GAAAA,kBAA0BjB,EAAIgB,GAAQE,MAAK,WACzCR,EAAS,kCAmBb,OATAS,EAAAA,EAAAA,YAAU,WACRF,EAAAA,GAAAA,eAAuBjB,GAAIkB,MAAK,SAACE,GAC/BP,EAAOQ,cAAc,YAAaD,EAAQlB,WAC1CW,EAAOQ,cAAc,OAAQD,EAAQjB,MACrCU,EAAOQ,cAAc,WAAYD,EAAQhB,UACzCS,EAAOQ,cAAc,WAAYD,EAAQf,eAE1C,CAACL,KAGF,gBAAKF,UAAU,yCAAf,UACE,iBAAKA,UAAU,mDAAf,WACE,eAAIA,UAAU,+DAAd,kCAIA,kBAAMA,UAAU,MAAMiB,SAAUF,EAAOS,aAAvC,WACE,SAAC,KAAD,gBACEjC,MAAM,aACNG,YAAY,eACRqB,EAAOU,cAAc,cAH3B,IAIE3B,MAAOiB,EAAOW,QAAQtB,WAAaW,EAAOY,OAAOvB,cAEnD,SAAC,KAAD,gBACEb,MAAM,OACNG,YAAY,iBACRqB,EAAOU,cAAc,SAH3B,IAIE3B,MAAOiB,EAAOW,QAAQrB,MAAQU,EAAOY,OAAOtB,SAE9C,SAAC,KAAD,gBACEd,MAAM,YACNG,YAAY,YACRqB,EAAOU,cAAc,aAH3B,IAIE3B,MAAOiB,EAAOW,QAAQpB,UAAYS,EAAOY,OAAOrB,aAElD,SAAC,KAAD,gBACEf,MAAM,YACNG,YAAY,iBACRqB,EAAOU,cAAc,aAH3B,IAIE3B,MAAOiB,EAAOW,QAAQnB,UAAYQ,EAAOY,OAAOpB,aAKlD,iBAAKP,UAAU,8CAAf,WACE,mBACEP,KAAK,SACLO,UAAU,4DACVL,QAAS,kBAAMiB,GAAU,IAH3B,mBAOA,mBACEnB,KAAK,SACLO,UAAU,4DAFZ,+B","sources":["components/Shared/Form/InputField.js","screens/User/EditAccount.js"],"sourcesContent":["const InputField = ({\n  label,\n  name,\n  type = 'text',\n  placeholder,\n  onClick,\n  onBlur,\n  value,\n  error,\n  ...props\n}) => {\n  return (\n    <div className=\"relative mb-7\">\n      <label htmlFor={name} className=\"mb-4 block font-medium text-heading\">\n        {label}\n      </label>\n\n      <input\n        id={name}\n        type={type}\n        className=\"block w-full rounded-ms border border-border bg-body-bg px-5 py-2.5 font-medium text-heading transition duration-150 placeholder:font-medium placeholder:text-heading/60 focus:border-primary focus:ring-0\"\n        placeholder={placeholder}\n        value={value}\n        onClick={onClick}\n        onBlur={onBlur}\n        {...props}\n      />\n\n      <span className=\"absolute bottom-0.5 -mb-5 block text-xs text-danger\">\n        {error}\n      </span>\n    </div>\n  );\n};\n\nexport default InputField;\n","import { useEffect } from 'react';\nimport InputField from '../../components/Shared/Form/InputField';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport routingImage from '../../assets/images/routing.png';\nimport { UserAPI } from '../../api';\n\nconst initialValues = {\n  swiftCode: '',\n  iban: '',\n  fullName: '',\n  bankName: '',\n};\n\nconst validationSchema = Yup.object({\n  swiftCode: Yup.string().required('Routing number is required'),\n  iban: Yup.string()\n    .required('Account number is required')\n    .matches(/^[A-Z]{2}[0-9]+$/, 'Invalid IBAN'),\n  fullName: Yup.string().required('Full name is required'),\n  bankName: Yup.string().required('Bank name is required'),\n});\n\nconst EditAccount = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const onSubmit = (values) => {\n    UserAPI.updateBankAccount(id, values).then(() => {\n      navigate('/setting/linked-accounts');\n    });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  useEffect(() => {\n    UserAPI.getBankAccount(id).then((account) => {\n      formik.setFieldValue('swiftCode', account.swiftCode);\n      formik.setFieldValue('iban', account.iban);\n      formik.setFieldValue('fullName', account.fullName);\n      formik.setFieldValue('bankName', account.bankName);\n    });\n  }, [id]);\n\n  return (\n    <div className=\"flex items-center justify-center py-16\">\n      <div className=\"w-full max-w-md rounded-2xl bg-white shadow-card\">\n        <h4 className=\"border-b border-border p-5 text-lg font-medium  text-heading\">\n          Link a bank account\n        </h4>\n\n        <form className=\"p-5\" onSubmit={formik.handleSubmit}>\n          <InputField\n            label=\"Swift Code\"\n            placeholder=\"2548AE2WE17\"\n            {...formik.getFieldProps('swiftCode')}\n            error={formik.touched.swiftCode && formik.errors.swiftCode}\n          />\n          <InputField\n            label=\"IBAN\"\n            placeholder=\"IT34567895421\"\n            {...formik.getFieldProps('iban')}\n            error={formik.touched.iban && formik.errors.iban}\n          />\n          <InputField\n            label=\"Full name\"\n            placeholder=\"John Doe\"\n            {...formik.getFieldProps('fullName')}\n            error={formik.touched.fullName && formik.errors.fullName}\n          />\n          <InputField\n            label=\"Bank name\"\n            placeholder=\"Bank of Italy\"\n            {...formik.getFieldProps('bankName')}\n            error={formik.touched.bankName && formik.errors.bankName}\n          />\n\n          {/* <img src={routingImage} alt=\"Routing\" className=\"w-full\" /> */}\n\n          <div className=\"mt-7 flex items-center justify-center gap-4\">\n            <button\n              type=\"button\"\n              className=\"rounded-full bg-primary px-12 py-3 font-medium text-white\"\n              onClick={() => navigate(-1)}\n            >\n              Back\n            </button>\n            <button\n              type=\"submit\"\n              className=\"rounded-full bg-success px-12 py-3 font-medium text-white\"\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default EditAccount;\n"],"names":["label","name","type","placeholder","onClick","onBlur","value","error","props","className","htmlFor","id","initialValues","swiftCode","iban","fullName","bankName","validationSchema","Yup","required","matches","navigate","useNavigate","useParams","formik","useFormik","onSubmit","values","UserAPI","then","useEffect","account","setFieldValue","handleSubmit","getFieldProps","touched","errors"],"sourceRoot":""}