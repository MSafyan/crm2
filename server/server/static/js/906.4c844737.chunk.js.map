{"version":3,"file":"static/js/906.4c844737.chunk.js","mappings":"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","sources":["components/Shared/Form/InputField.js","components/Shared/Form/ProfilePicUpload.js","components/Shared/Form/SelectField.js","components/User/Setting/EditProfile/PersonalInfoCard.js","components/User/Setting/EditProfile/ProfileCard1.js","components/User/Setting/EditProfile/ProfileCard2.js","screens/User/Setting/EditProfile.js"],"sourcesContent":["const InputField = ({\n  label,\n  name,\n  type = 'text',\n  placeholder,\n  onClick,\n  onBlur,\n  value,\n  error,\n  ...props\n}) => {\n  return (\n    <div className=\"relative mb-7\">\n      <label htmlFor={name} className=\"mb-4 block font-medium text-heading\">\n        {label}\n      </label>\n\n      <input\n        id={name}\n        type={type}\n        className=\"block w-full rounded-ms border border-border bg-body-bg px-5 py-2.5 font-medium text-heading transition duration-150 placeholder:font-medium placeholder:text-heading/60 focus:border-primary focus:ring-0\"\n        placeholder={placeholder}\n        value={value}\n        onClick={onClick}\n        onBlur={onBlur}\n        {...props}\n      />\n\n      <span className=\"absolute bottom-0.5 -mb-5 block text-xs text-danger\">\n        {error}\n      </span>\n    </div>\n  );\n};\n\nexport default InputField;\n","import { UserIcon } from '@heroicons/react/solid';\nimport { useState } from 'react';\n\nconst ProfilePicUpload = ({ value, onChange, maxFileSize, name }) => {\n  const [error, setError] = useState(null);\n\n  const formatSize = (bytes) => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) {\n      return '0 Byte';\n    }\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${Math.round(bytes / Math.pow(1024, i), 2)} ${sizes[i]}`;\n  };\n\n  return (\n    <div className=\"relative mb-7\">\n      <div className=\"mb-4 flex items-center gap-4\">\n        <div className=\"h-14 w-14 flex-shrink-0 rounded-full bg-muted\">\n          {value ? (\n            <img\n              src={\n                typeof value === 'string' ? value : URL.createObjectURL(value)\n              }\n              alt={'Profile Pic'}\n              className=\"h-full w-full object-cover\"\n            />\n          ) : (\n            <div className=\"flex h-full w-full items-center justify-center text-white/80 \">\n              <UserIcon className=\"h-10 w-10\" />\n            </div>\n          )}\n        </div>\n        <div>\n          <h4 className=\"text-lg font-medium leading-6 text-heading\">{name}</h4>\n          <p>Max file size is {formatSize(maxFileSize)}</p>\n        </div>\n      </div>\n      <div className=\"relative cursor-pointer\">\n        <input\n          className=\"inside-0 absolute cursor-pointer opacity-0 file:cursor-pointer\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={(e) => {\n            const file = e.target.files[0];\n            if (file.size > maxFileSize) {\n              setError(\n                `File size is too large. Max file size is ${formatSize(\n                  maxFileSize\n                )}`\n              );\n            }\n            onChange(file);\n          }}\n        />\n        <div className=\"flex\">\n          <div className=\"form-input w-full flex-1 rounded-l-ms border border-border bg-body-bg px-5 py-2.5 font-medium text-heading transition duration-150 placeholder:font-medium placeholder:text-heading focus:border-primary focus:ring-0\">\n            Change Photo\n          </div>\n          <div className=\"flex items-center justify-center rounded-r-ms bg-primary px-4 font-medium text-white\">\n            Upload\n          </div>\n        </div>\n      </div>\n      <span className=\"absolute bottom-0.5 -mb-5 block text-xs text-danger\">\n        {error}\n      </span>\n    </div>\n  );\n};\n\nexport default ProfilePicUpload;\n","const SelectField = ({\n  label,\n  name,\n  placeholder,\n  onClick,\n  onBlur,\n  value,\n  error,\n  options,\n  Icon,\n  noGap,\n  ...props\n}) => {\n  return (\n    <div className={`relative ${noGap ? 'mb-0' : 'mb-7'}`}>\n      {label && (\n        <label htmlFor={name} className=\"mb-4 block font-medium text-heading\">\n          {label}\n        </label>\n      )}\n\n      <div className=\"box-border flex w-full divide-x divide-border rounded-ms border border-border bg-body-bg\">\n        {Icon && (\n          <div className=\"flex items-center justify-center rounded-ms bg-white px-3 text-heading\">\n            <Icon className=\"h-7 w-7\" />\n          </div>\n        )}\n        <select\n          id={name}\n          className=\"block min-w-0 flex-1 rounded-ms border-0 bg-transparent px-5 font-medium text-heading transition duration-150 focus:ring-1 focus:ring-primary\"\n          placeholder={placeholder}\n          value={value}\n          onClick={onClick}\n          onBlur={onBlur}\n          {...props}\n        >\n          <option value=\"\">Select</option>\n          {options.map((option) => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n\n      <span className=\"absolute bottom-0.5 -mb-5 block text-xs text-danger\">\n        {error}\n      </span>\n    </div>\n  );\n};\n\nexport default SelectField;\n","import InputField from '../../../Shared/Form/InputField';\nimport SelectField from '../../../Shared/Form/SelectField';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useEffect, useState } from 'react';\nimport { CountriesAPI, UserAPI } from '../../../../api';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  dateOfBirth: '',\n  presentAddress: '',\n  permanentAddress: '',\n  city: '',\n  postalCode: '',\n  country: '',\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n  dateOfBirth: Yup.date(),\n  presentAddress: Yup.string(),\n  permanentAddress: Yup.string(),\n  city: Yup.string(),\n  postalCode: Yup.string(),\n  country: Yup.string(),\n});\n\nconst PersonalInfoCard = ({ user }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    CountriesAPI.getAll().then((countries) => {\n      setCountries(countries);\n    });\n  }, []);\n\n  const onSubmit = (values) => {\n    UserAPI.updateUser(user._id, {\n      name: values.name,\n      email: values.email,\n      dateOfBirth: values.dateOfBirth,\n      presentAddress: values.presentAddress,\n      permanentAddress: values.permanentAddress,\n      city: values.city,\n      postalCode: values.postalCode,\n      country: values.country,\n    });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  useEffect(() => {\n    formik.setValues(user);\n  }, [user]);\n\n  return (\n    <div className=\"col-span-2 w-full rounded-2xl bg-white shadow-card\">\n      <h4 className=\"border-b border-border p-5 text-lg font-medium  text-heading\">\n        Personal Information\n      </h4>\n\n      <form\n        className=\"grid grid-cols-1 gap-x-3 p-5 lg:grid-cols-2\"\n        onSubmit={formik.handleSubmit}\n      >\n        <InputField\n          label=\"Your Name\"\n          placeholder=\"Name\"\n          {...formik.getFieldProps('name')}\n          error={formik.touched.name && formik.errors.name}\n        />\n        <InputField\n          label=\"Email\"\n          placeholder=\"Email\"\n          {...formik.getFieldProps('email')}\n          error={formik.touched.email && formik.errors.email}\n        />\n        <InputField\n          label=\"Date of Birth\"\n          placeholder=\"Date of Birth\"\n          type=\"date\"\n          {...formik.getFieldProps('dateOfBirth')}\n          error={formik.touched.dateOfBirth && formik.errors.dateOfBirth}\n        />\n        <InputField\n          label=\"Present Address\"\n          placeholder=\"Present Address\"\n          {...formik.getFieldProps('presentAddress')}\n          error={formik.touched.presentAddress && formik.errors.presentAddress}\n        />\n        <InputField\n          label=\"Permanent Address\"\n          placeholder=\"Permanent Address\"\n          {...formik.getFieldProps('permanentAddress')}\n          error={\n            formik.touched.permanentAddress && formik.errors.permanentAddress\n          }\n        />\n        <InputField\n          label=\"City\"\n          placeholder=\"City\"\n          {...formik.getFieldProps('city')}\n          error={formik.touched.city && formik.errors.city}\n        />\n        <InputField\n          label=\"Postal Code\"\n          placeholder=\"Postal Code\"\n          {...formik.getFieldProps('postalCode')}\n          error={formik.touched.postalCode && formik.errors.postalCode}\n        />\n        <SelectField\n          label=\"Country\"\n          placeholder=\"Country\"\n          options={countries.map((country) => ({\n            label: country.country,\n            value: country._id,\n          }))}\n          {...formik.getFieldProps('country')}\n          error={formik.touched.country && formik.errors.country}\n        />\n\n        <div>\n          <button className=\"rounded-full bg-success px-12 py-3 font-medium text-white\">\n            Save\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonalInfoCard;\n","import InputField from '../../../Shared/Form/InputField';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport ProfilePicUpload from '../../../Shared/Form/ProfilePicUpload';\nimport { useEffect } from 'react';\nimport { UserAPI } from '../../../../api';\n\nconst initialValues = {\n  name: '',\n  profilePic: '',\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Name is required'),\n  profilePic: Yup.mixed(),\n});\n\nconst ProfileCard1 = ({ user }) => {\n  const onSubmit = (values) => {\n    const formData = new FormData();\n    formData.append('name', values.name);\n    if (values.profilePic instanceof File) {\n      formData.append('profilePic', values.profilePic);\n    }\n\n    UserAPI.updateUser(user._id, formData, true);\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  useEffect(() => {\n    formik.setValues(user);\n  }, [user]);\n\n  return (\n    <div className=\"col-span-2 w-full rounded-2xl bg-white shadow-card lg:col-span-1\">\n      <h4 className=\"border-b border-border p-5 text-lg font-medium  text-heading\">\n        User Profile\n      </h4>\n\n      <form className=\"p-5\" onSubmit={formik.handleSubmit}>\n        <InputField\n          label=\"Your Name\"\n          placeholder=\"Name\"\n          {...formik.getFieldProps('name')}\n          error={formik.touched.name && formik.errors.name}\n        />\n        <ProfilePicUpload\n          value={formik.values.profilePic}\n          onChange={(file) => {\n            formik.setFieldValue('profilePic', file);\n          }}\n          maxFileSize={2000000}\n          name={formik.values.name || 'Profile Picture'}\n        />\n        <button className=\"rounded-full bg-success px-12 py-3 font-medium text-white\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ProfileCard1;\n","import InputField from '../../../Shared/Form/InputField';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { UserAPI } from '../../../../api';\nimport { useEffect } from 'react';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n  password: Yup.string().min(6, 'Password must be at least 6 characters'),\n});\n\nconst ProfileCard2 = ({ user }) => {\n  const onSubmit = (values) => {\n    UserAPI.updateUser(user._id, {\n      email: values.email,\n      password: values.password,\n    }).then(() => {\n      formik.setFieldValue('password', '');\n    });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit,\n  });\n\n  useEffect(() => {\n    formik.setValues(user);\n  }, [user]);\n\n  return (\n    <div className=\"col-span-2 w-full rounded-2xl bg-white shadow-card lg:col-span-1\">\n      <h4 className=\"border-b border-border p-5 text-lg font-medium  text-heading\">\n        User Profile\n      </h4>\n\n      <form className=\"p-5\" onSubmit={formik.handleSubmit}>\n        <InputField\n          label=\"New Email\"\n          placeholder=\"Email\"\n          type=\"email\"\n          {...formik.getFieldProps('email')}\n          error={formik.touched.email && formik.errors.email}\n        />\n        <InputField\n          label=\"New Password\"\n          placeholder=\"**********\"\n          {...formik.getFieldProps('password')}\n          error={formik.touched.password && formik.errors.password}\n        />\n        <button className=\"rounded-full bg-success px-12 py-3 font-medium text-white\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ProfileCard2;\n","import { useEffect, useState } from 'react';\nimport { UserAPI } from '../../../api';\nimport PersonalInfoCard from '../../../components/User/Setting/EditProfile/PersonalInfoCard';\nimport ProfileCard1 from '../../../components/User/Setting/EditProfile/ProfileCard1';\nimport ProfileCard2 from '../../../components/User/Setting/EditProfile/ProfileCard2';\nimport { useAuth } from '../../../contexts/AuthContext';\n\nconst EditProfile = () => {\n  const { user: authUser } = useAuth();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    UserAPI.getUser(authUser._id).then((res) => {\n      setUser(res);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"grid grid-cols-2 items-start gap-7\">\n      {loading ? (\n        <div className=\"col-span-1 text-center\">Loading...</div>\n      ) : (\n        <>\n          <ProfileCard1 user={user} />\n          <ProfileCard2 user={user} />\n          <PersonalInfoCard user={user} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default EditProfile;\n"],"names":["label","name","type","placeholder","onClick","onBlur","value","error","props","className","htmlFor","id","onChange","maxFileSize","useState","setError","formatSize","bytes","i","Math","floor","log","round","pow","src","URL","createObjectURL","alt","accept","e","file","target","files","size","options","Icon","noGap","map","option","initialValues","email","dateOfBirth","presentAddress","permanentAddress","city","postalCode","country","validationSchema","Yup","required","user","countries","setCountries","useEffect","CountriesAPI","then","formik","useFormik","onSubmit","values","UserAPI","_id","setValues","handleSubmit","InputField","getFieldProps","touched","errors","SelectField","profilePic","formData","FormData","append","File","ProfilePicUpload","setFieldValue","password","min","authUser","useAuth","setUser","loading","setLoading","res"],"sourceRoot":""}